# Generated by Django 2.1.15 on 2023-06-26 06:47

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='tradingSystem.Comment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CommentReply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('reply_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'comment_reply',
                'ordering': ['reply_time'],
            },
        ),
        migrations.CreateModel(
            name='HistoryTradeTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_price', models.FloatField()),
                ('trade_shares', models.IntegerField()),
                ('trade_time', models.CharField(max_length=40)),
            ],
            options={
                'db_table': 'history_trade_table',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('url', models.URLField(null=True)),
                ('content', models.TextField()),
                ('read', models.IntegerField(default=0, null=True)),
                ('news_time', models.DateField(auto_now=True)),
            ],
            options={
                'db_table': 'news',
                'ordering': ['news_time'],
            },
        ),
        migrations.CreateModel(
            name='OptionalStockTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_of_shares', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'optional_stock_table',
            },
        ),
        migrations.CreateModel(
            name='StockComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('content', models.TextField(verbose_name='股票内容')),
                ('comment_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'stock_comment',
                'ordering': ['comment_time'],
            },
        ),
        migrations.CreateModel(
            name='StockInfo',
            fields=[
                ('stock_id', models.CharField(max_length=6, primary_key=True, serialize=False)),
                ('stock_name', models.CharField(max_length=45)),
                ('issuance_time', models.CharField(max_length=45)),
                ('closing_price_y', models.FloatField(null=True)),
                ('open_price_t', models.FloatField(null=True)),
                ('stock_type', models.CharField(max_length=15, null=True)),
                ('block', models.CharField(max_length=45, null=True)),
                ('change_extent', models.FloatField(null=True)),
            ],
            options={
                'db_table': 'stock_info',
            },
        ),
        migrations.CreateModel(
            name='UserTable',
            fields=[
                ('user_id', models.CharField(max_length=12)),
                ('id_no', models.CharField(max_length=18)),
                ('user_name', models.CharField(max_length=45)),
                ('password', models.CharField(max_length=45)),
                ('user_sex', models.CharField(max_length=5)),
                ('phone_number', models.CharField(max_length=45, primary_key=True, serialize=False)),
                ('user_email', models.EmailField(max_length=254)),
                ('photo_url', models.CharField(max_length=45)),
                ('account_num', models.CharField(max_length=45)),
                ('account_type', models.CharField(max_length=45)),
                ('account_balance', models.FloatField(null=True)),
                ('freeze', models.BooleanField(default=False)),
                ('account_opened', models.BooleanField(default=True)),
                ('last_login', models.CharField(max_length=45, null=True)),
            ],
            options={
                'db_table': 'user_table',
            },
        ),
        migrations.AddField(
            model_name='stockcomment',
            name='stock_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tradingSystem.StockInfo'),
        ),
        migrations.AddField(
            model_name='stockcomment',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tradingSystem.UserTable'),
        ),
        migrations.AddField(
            model_name='optionalstocktable',
            name='stock_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tradingSystem.StockInfo'),
        ),
        migrations.AddField(
            model_name='optionalstocktable',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tradingSystem.UserTable'),
        ),
        migrations.AddField(
            model_name='historytradetable',
            name='stock_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tradingSystem.StockInfo'),
        ),
        migrations.AddField(
            model_name='historytradetable',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tradingSystem.UserTable'),
        ),
        migrations.AddField(
            model_name='commentreply',
            name='comment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tradingSystem.StockComment'),
        ),
        migrations.AddField(
            model_name='commentreply',
            name='reply',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tradingSystem.CommentReply'),
        ),
        migrations.AddField(
            model_name='commentreply',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tradingSystem.UserTable'),
        ),
        migrations.AddField(
            model_name='comment',
            name='reply_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replyers', to='tradingSystem.UserTable'),
        ),
        migrations.AddField(
            model_name='comment',
            name='stock_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='tradingSystem.StockInfo'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='tradingSystem.UserTable'),
        ),
        migrations.AlterUniqueTogether(
            name='optionalstocktable',
            unique_together={('user_id', 'stock_id')},
        ),
    ]
